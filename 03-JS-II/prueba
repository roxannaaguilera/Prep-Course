
FOR::

La mayoria de software ejecutan expresiones una y otra vez hasta que devuelven lo que estamos buscando, esto es conocido como un bucle.JavaScript tiene dos expresiones de bucle y una de ellas es "for ".

la sintaxis de esta expresión es parecida a la de if, comienza con la palabra for, seguida de parentesis y luego abrimos llaves para copiar el codigo y cerramos.

Dentro de los parentesis primero declaramos una variable, luego tenemos una declaración condicional y tercero incrementamos la variable.Ej:

for (let i = 0; i < 10; i++) {
    console.log(i);
}

OPERADORES LÓGICOS:

&& : 

El operador "y"("AND") evaluará las expresiones de una operación y si ambas expresiones son true, devolverá verdadero, si una expresión es false y la otra es true, devolverá false y si ambas son false, devovlerá falso.ejemplo:

if (100 > 10 && 10 === 10) }
console.log('ambas declaraciones son ciertas, este codigo se ejecutará')
  }

if (10 === 9 && 10 > 9) {
    console.log('una de las declaraciones es falsa, por lo que && devolverá false y este codigo no se ejecutará')
}

|| :

este operador lleva por nombre "ó"(or) si una de las expresiones es true, devolverá true, si ambas operaciones son true, devolverá true, de lo contrario devolverá false.Ejemplo:

if (100 > 10 || 10 === 10) {
    console.log('ambas declaraciones son ciertas, este codigo se ejecutará')
}

! :

Este operador logico es llamado ¨no¨ (NOT) devolverá el valor booleano opuesto a lo que se le parseFloat.Ejemplo:

if (! false) {
    console.log(' el '!' devolverá true, por que if es lo contrario de false, así que este codigo se ejecutará');
}

if (!(1 === 1) {
    console.log('1 es igual a 1, de modo que la expresión devuelve true. El operador '!' devolverá lo contrario de eso por lo que este codigo no se ejecutará').
